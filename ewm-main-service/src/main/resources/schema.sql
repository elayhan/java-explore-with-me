CREATE TABLE IF NOT EXISTS users (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(251) NOT NULL,
  email varchar(255) NOT NULL,
  CONSTRAINT user_id_pk PRIMARY KEY (id),
  CONSTRAINT users_email_u_idx UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS compilation (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  pinned boolean DEFAULT FALSE NOT NULL,
  title varchar(50) NOT NULL,
  CONSTRAINT compilation_id_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS category (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(50) NOT NULL,
  constraint category_id_pk primary key (id),
  CONSTRAINT category_name_u_idx UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS location (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  lat NUMERIC NOT NULL,
  lon NUMERIC NOT NULL,
  CONSTRAINT location_id_pk PRIMARY KEY (id),
  CONSTRAINT location_lat_lon_u_idx UNIQUE (lat,lon)
);

CREATE TABLE IF NOT EXISTS event (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  annotation varchar(2000) NOT NULL,
  category_id bigint REFERENCES category(id),
  created_on timestamp without time zone default current_timestamp NOT NULL ,
  description varchar(7000),
  event_date timestamp without time zone NOT NULL,
  user_id bigint not null REFERENCES users(id) ON DELETE CASCADE,
  location_id bigint REFERENCES location(id),
  paid boolean DEFAULT false NOT NULL,
  participant_limit integer DEFAULT 0 NOT NULL,
  published_on timestamp without time ZONE,
  request_moderation boolean DEFAULT TRUE NOT NULL,
  state varchar(50) default 'PENDING' NOT NULL,
  title varchar(120) NOT NULL,
  CONSTRAINT event_id_pk PRIMARY KEY (id),
  CONSTRAINT event_participant_limit_positive_chk CHECK (participant_limit >= 0),
  constraint event_date_after_create_chk check (event_date + interval '2' hour >= created_on)
);
create index if not exists event_lower_annotation_idx on event (lower(annotation));
create index if not exists event_event_date_idx on event(event_date);
create index if not exists event_state_idx on event(state);

create table if not exists request (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  event_id bigint REFERENCES event(id) ON DELETE CASCADE,
  requester_id bigint REFERENCES users(id) ON DELETE CASCADE,
  status varchar(50) DEFAULT 'PENDING' NOT NULL,
  created timestamp without time zone default current_timestamp,
  CONSTRAINT request_id_pk PRIMARY KEY (id),
  constraint request_event_req_u_idx unique (event_id, requester_id)
);

CREATE TABLE IF NOT EXISTS compilation_event (
  compilation_id bigint REFERENCES compilation(id) ON DELETE CASCADE,
  event_id bigint REFERENCES event(id) ON DELETE CASCADE,
  CONSTRAINT compilation_event_pk PRIMARY KEY (compilation_id, event_id)
);
